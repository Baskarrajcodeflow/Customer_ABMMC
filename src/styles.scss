// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
@import 'tailwindcss/base';
@import 'tailwindcss/components';
@import 'tailwindcss/utilities';

// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$miPay-b2c-primary: mat.define-palette(mat.$indigo-palette);
$miPay-b2c-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$miPay-b2c-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$miPay-b2c-theme: mat.define-light-theme((
  color: (
    primary: $miPay-b2c-primary,
    accent: $miPay-b2c-accent,
    warn: $miPay-b2c-warn,
  ),
  typography: mat.define-typography-config(),
  density: 0
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($miPay-b2c-theme);

/* You can add global styles to this file, and also import other style files */

html, body { height: 100%; }


/* Ensure that the flex container fills the entire viewport height */
.flex {
  min-height: 100%;
}

/* Ensure that the main content area expands to fill available space */
.flex-grow {
  flex-grow: 1;
}
/* body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }
 */
  /* Applying theme variables */
  body {
    font-family: var(--font-family-base);
    font-size: var(--font-size-base);
    color: var(--text-color);
    background-color: var(--color-light);
  }
  
  h1, h2, h3, h4, h5, h6 {
    color: var(--heading-color);
  }
  
  .btn-primary {
    background-color: var(--color-primary);
    border-color: var(--color-primary);

  }
  .btn-primary:hover {
    background-color: #333855; /* Example: Lighten the primary color on hover */
  }
  .btn-primary:disabled{
    background-color: var(--color-disabled);
  }

  
  
  .btn-secondary {
    background-color: var(--color-secondary);
    border-color: var(--color-secondary);
  }
  .btn{
    font-family: var(--font-family-base);

  }

  .header-titles{
    color: var(--color-primary); /*#4a517e;*/
    font-weight: 800;
  }

  .captions{
    color:#7cb8e2;
    font-weight: 800;

  }

  .links-text{
    color: var(--color-primary); /*#4a517e;*/
    font-weight: 700;

  }
  .footer-bg{
    background-color :var(--color-primary)
  }

  .dark-blue-pantom{
    background-color: var(--color-blue);
  }

  .header-login{
    background-color:  var(--color-primary);;
  }

  .global-header{
    background-color:  rgb(248, 249, 250);
  }
  
  .color-blue-login{
    background-color: rgb(0,100,162);
  }

  .color-orange-login{
    background-color: rgb(244, 122, 32);
  }

  .color-text{
    color: #106eab;
  }
  .color-darkBlue{
    background-color: #4e96af;//#15659f;
  }

  /* Additional custom classes can follow, utilizing the defined variables */
  

html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }

